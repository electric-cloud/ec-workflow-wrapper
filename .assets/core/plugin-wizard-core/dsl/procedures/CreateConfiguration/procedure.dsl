import java.io.File

// Please do not edit this file
// === configuration template ===
procedure 'CreateConfiguration', description: 'Creates a plugin configuration', {
{% if (shell == "ec-groovy" and checkConnection)  %}
    //First, let's download third-party dependencies
    step 'flowpdk-setup', {
        description = "This step handles binary dependencies delivery"
        subprocedure = 'flowpdk-setup'
        actualParameter = [
            generateClasspathFromFolders: '{{generateClasspathFromFolders}}'
        ]
        {% if resourceName %}resourceName = '{{resourceName}}'{% endif %}
    }
{% endif %}

{% if (checkConnection) %}
    step 'checkConnection',
        command: new File(pluginDir, "dsl/procedures/CreateConfiguration/steps/checkConnection{{ extension }}").text,
        errorHandling: 'abortProcedure',
        {% if processedShell %}shell: '{{processedShell}}',{% else %}shell: '{{shell}}',{% endif %}
        condition: '$[/javascript myJob.checkConnection == "true" || myJob.checkConnection == "1"]',
        {% if resourceName %}resourceName: '{{resourceName}}',{% endif %}
        postProcessor: '$[/myProject/perl/postpLoader]'
{% endif %}


{% if (checkConnectionGeneric) %}
    step 'checkConnectionGeneric',
        command: new File(pluginDir, "dsl/procedures/CreateConfiguration/steps/checkConnectionGeneric{{ checkConnectionGenericExtension }}").text,
        errorHandling: 'abortProcedure',
        shell: '{{checkConnectionGenericShell}}',

        condition: '$[/javascript myJob.checkConnection == "true"]'
{% endif %}

    step 'createConfiguration',
        command: new File(pluginDir, "dsl/procedures/CreateConfiguration/steps/createConfiguration.pl").text,
        errorHandling: 'abortProcedure',
        exclusiveMode: 'none',
        postProcessor: '$[/myProject/perl/postpLoader]',
        releaseMode: 'none',
        shell: 'ec-perl',
        timeLimitUnits: 'minutes'

    property 'ec_checkConnection', value: '{{ checkConnectionMetadata }}'
// === configuration template ends ===
// === configuration ends ===
}
